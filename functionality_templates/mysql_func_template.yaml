apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mysql
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
automountServiceAccountToken: true
secrets:
- name: release-name-mysql
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mysql
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: OVB6aHBscmQ2aA==
  mysql-password: enVSVDd6eVJpSA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mysql
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: '[mysqld]

    default_authentication_plugin=mysql_native_password

    skip-name-resolve

    explicit_defaults_for_timestamp

    basedir=/opt/bitnami/mysql

    plugin_dir=/opt/bitnami/mysql/lib/plugin

    port=3306

    socket=/opt/bitnami/mysql/tmp/mysql.sock

    datadir=/bitnami/mysql/data

    tmpdir=/opt/bitnami/mysql/tmp

    max_allowed_packet=16M

    bind-address=*

    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

    log-error=/opt/bitnami/mysql/logs/mysqld.log

    character-set-server=UTF8

    collation-server=utf8_general_ci

    slow_query_log=0

    slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log

    long_query_time=10.0


    [client]

    port=3306

    socket=/opt/bitnami/mysql/tmp/mysql.sock

    default-character-set=UTF8

    plugin_dir=/opt/bitnami/mysql/lib/plugin


    [manager]

    port=3306

    socket=/opt/bitnami/mysql/tmp/mysql.sock

    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid'
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql-headless
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
    nodePort: null
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mysql
  namespace: busybox-namespace
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.7.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  podManagementPolicy: ''
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 74f6d694934e49250ce5cfc5e93637df13431c704ef8367a3f69b565dd4aee71
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.7.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: release-name-mysql
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: mysql
                  app.kubernetes.io/instance: release-name
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers: null
      containers:
      - name: mysql
        image: docker.io/bitnami/mysql:8.0-bookworm@sha256:3e02ef51dfc79b03db86b7c0062d3bad3fd9f0387e2fa840842e7ef9d88d8e2c
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: false
          runAsUser: 1000
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
          allowPrivilegeEscalation: false
          runAsGroup: 1000
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MYSQL_DATABASE
          value: my_database
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        startupProbe:
          failureThreshold: 10
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            memory: 128Mi
            cpu: 250m
        volumeMounts:
        - name: data
          mountPath: /bitnami/mysql
        - name: config
          mountPath: /opt/bitnami/mysql/conf/my.cnf
          subPath: my.cnf
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      volumes:
      - name: config
        configMap:
          name: release-name-mysql
      - name: secret-volume
        secret:
          secretName: my-secret
      automountServiceAccountToken: false
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: primary
      annotations: null
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
spec:
  podSelector: {}
  policyTypes: []
